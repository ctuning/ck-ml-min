diff --git a/tensorflow_cc/cmake/build_tensorflow.sh b/tensorflow_cc/cmake/build_tensorflow.sh
index 9957639..b4d83ac 100755
--- a/tensorflow_cc/cmake/build_tensorflow.sh
+++ b/tensorflow_cc/cmake/build_tensorflow.sh
@@ -17,17 +17,17 @@ export PYTHON_BIN_PATH="$(which python3)"
 export PYTHON_LIB_PATH="$($PYTHON_BIN_PATH -c 'import site; print(site.getsitepackages()[0])')"
 
 # configure cuda environmental variables
-if [ -e /opt/cuda ]; then
+if [ -e ${CK_ENV_COMPILER_CUDA} ]; then
     echo "CUDA support enabled"
     cuda_config_opts="--config=cuda"
     export TF_NEED_CUDA=1
     export TF_CUDA_COMPUTE_CAPABILITIES="3.5,5.2,6.1,6.2"
-    export CUDA_TOOLKIT_PATH=/opt/cuda
-    export CUDNN_INSTALL_PATH=/opt/cuda
+    export CUDA_TOOLKIT_PATH=${CK_ENV_COMPILER_CUDA}
+    export CUDNN_INSTALL_PATH=${CK_ENV_LIB_CUDNN}
     export TF_CUDA_VERSION="$($CUDA_TOOLKIT_PATH/bin/nvcc --version | sed -n 's/^.*release \(.*\),.*/\1/p')"
     export TF_CUDNN_VERSION="$(sed -n 's/^#define CUDNN_MAJOR\s*\(.*\).*/\1/p' $CUDNN_INSTALL_PATH/include/cudnn.h)"
     # use gcc-5 for now, clang in the future
-    export GCC_HOST_COMPILER_PATH=/usr/bin/gcc-6
+    export GCC_HOST_COMPILER_PATH=${CK_ENV_COMPILER_GCC}/bin/${CK_CC}
     export CLANG_CUDA_COMPILER_PATH=/usr/bin/clang
     export TF_CUDA_CLANG=0
 else
@@ -38,5 +38,5 @@ fi
 
 # configure and build
 ./configure
-bazel build -c opt $cuda_config_opts --copt=${CC_OPT_FLAGS} tensorflow:libtensorflow_cc.so
+bazel build -c opt $cuda_config_opts --copt=${CC_OPT_FLAGS} --jobs ${CK_HOST_CPU_NUMBER_OF_PROCESSORS} tensorflow:libtensorflow_cc.so
 bazel shutdown
